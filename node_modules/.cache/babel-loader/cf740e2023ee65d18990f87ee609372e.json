{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useTransition = (from, to, seconds = 1) => {\n  const [transitionValue, setTransitionValue] = useState(valueFrom, valueTo);\n  valueFrom, valueTo = decodeFromTo(from, to);\n  useEffect(() => {\n    const velocity = getVelocityInMillis(valueFrom, valueTo, seconds);\n    const interval = setInterval(() => {\n      setTransitionValue(transitionValue + velocity);\n    }, velocity * 1000);\n\n    if (transitionValue === valueTo) {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [seconds, transitionValue, valueFrom, valueTo]);\n  return transitionValue;\n};\n\nconst getVelocityInMillis = (from, to, seconds) => {\n  if (to !== from) {\n    return (to - from) / seconds;\n  }\n\n  return from;\n};\n\nexport { useTransition };","map":{"version":3,"sources":["/home/nizar/dev/react/transitions/src/lib/useTransition.js"],"names":["useState","useEffect","useTransition","from","to","seconds","transitionValue","setTransitionValue","valueFrom","valueTo","decodeFromTo","velocity","getVelocityInMillis","interval","setInterval","clearInterval"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,CAACC,IAAD,EAAOC,EAAP,EAAWC,OAAO,GAAG,CAArB,KAA2B;AAC7C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAACQ,SAAD,EAAYC,OAAZ,CAAtD;AAEAD,EAAAA,SAAS,EAAEC,OAAO,GAAGC,YAAY,CAACP,IAAD,EAAOC,EAAP,CAAjC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AAEhB,UAAMU,QAAQ,GAAGC,mBAAmB,CAACJ,SAAD,EAAYC,OAAZ,EAAqBJ,OAArB,CAApC;AACC,UAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC5BP,MAAAA,kBAAkB,CAACD,eAAe,GAACK,QAAjB,CAAlB;AACH,KAFwB,EAEtBA,QAAQ,GAAC,IAFa,CAA5B;;AAID,QAAIL,eAAe,KAAKG,OAAxB,EAAiC;AAC7BM,MAAAA,aAAa,CAACF,QAAD,CAAb;AACH;;AAED,WAAO,MAAME,aAAa,CAACF,QAAD,CAA1B;AAEC,GAbQ,EAaN,CAACR,OAAD,EAAUC,eAAV,EAA2BE,SAA3B,EAAsCC,OAAtC,CAbM,CAAT;AAeA,SAAOH,eAAP;AACH,CArBD;;AAuBA,MAAMM,mBAAmB,GAAG,CAACT,IAAD,EAAOC,EAAP,EAAWC,OAAX,KAAuB;AAC/C,MAAID,EAAE,KAAKD,IAAX,EAAiB;AACb,WAAO,CAACC,EAAE,GAACD,IAAJ,IAAUE,OAAjB;AACH;;AACD,SAAOF,IAAP;AACH,CALD;;AAOA,SACID,aADJ","sourcesContent":["import { useState, useEffect } from 'react'\n\nconst useTransition = (from, to, seconds = 1) => {\n    const [transitionValue, setTransitionValue] = useState(valueFrom, valueTo);\n\n    valueFrom, valueTo = decodeFromTo(from, to);\n    \n    useEffect(() => {\n\n    const velocity = getVelocityInMillis(valueFrom, valueTo, seconds);\n     const interval = setInterval(() => {\n            setTransitionValue(transitionValue+velocity)\n        }, velocity*1000);\n\n    if (transitionValue === valueTo) {\n        clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n\n    }, [seconds, transitionValue, valueFrom, valueTo]);\n\n    return transitionValue;\n}\n\nconst getVelocityInMillis = (from, to, seconds) => {\n    if (to !== from) {\n        return (to-from)/seconds;\n    }\n    return from;\n}\n\nexport {\n    useTransition\n}"]},"metadata":{},"sourceType":"module"}